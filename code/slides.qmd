---
title: "Ordinal regression models for Likert/rating scales data"
author: "Dr Stefano Coretta"
institute: "University of Edinburgh"
date: "2025/01/23"
format: 
  mono-light-revealjs:
    theme: [default, "custom.scss"]
    history: false
    fig-align: center
filters:
  - tachyonsextra
execute: 
  echo: true
---

## Ordinal data

```{r}
#| label: setup
#| include: false
options(ggplot2.discrete.fill = RColorBrewer::brewer.pal(8, "Dark2"))
options(ggplot2.discrete.colour = RColorBrewer::brewer.pal(8, "Dark2"))

library(HH)
library(tidyverse)
theme_set(theme_minimal())
library(brms)
```

```{r}
#| label: acceptability
#| message: false

acceptability <- read_csv("https://osf.io/download/xmkvg/")
acceptability |> select(Participant, Condition, Response)
```

## Process data for plotting

```{r}
#| label: acceptability-lik

acceptability_lik <- acceptability |>
  # we count the numbers for each Condition and Response combo
  count(Condition, Response) |>
  # then we pivot so that the data is wider, with columns for condition and 
  # each of the 7 values for the Response
  pivot_wider(names_from = "Response", values_from = n)
acceptability_lik
```

## Diverging stacked bar chart

```{r}
#| label: accept-likert
#| echo: true
#| fig-align: center

HH::likert(
  Condition ~ .,
  acceptability_lik,
  as.percent = TRUE,
  main = "Acceptability ratings by sentence condition"
)
```

## Ordinal variables are categorical

::: box-note
-   Methods for continuous variables are not appropriate ([Liddell and Kruschke 2018](https://doi.org/10.1016/j.jesp.2018.08.009), [Bürkner and Vuorre 2019](https://doi.org/10.1177/2515245918823199), [Verissimo 2021](https:// doi.org/10.1017/S1366728921000316)).

-   Ordinal regression models are a solution.
:::

## Ordinal variables are categorical: Gaussian regression fails

![](/img/ordinal-metric.png){fig-align="center" width="500"}

## Cumulative ordinal regression models

![](https://solomonkurz.netlify.app/blog/2021-12-29-notes-on-the-bayesian-cumulative-probit/index_files/figure-html/unnamed-chunk-10-1.png){fig-align="center" width="500"}

## Modelling acceptability with a cumulative ordinal model

```{r}
#| label: acc-bm-1

acc_bm_1 <- brm(
  Response ~ Condition + (Condition | Participant) + (1 | Item),
  data = acceptability,
  family = cumulative("probit"),
  cores = 4,
  seed = 7823,
  file = "data/cache/acc_bm_1"
)
```

## Modelling acceptability: summary

```{r}
#| label: acc-bm-1-sum
summary(acc_bm_1)
```

## Modelling acceptability: regression coefficients

```{r}
#| label: acc-bm-1-fixef
fixef(acc_bm_1)
```

. . .

::: box-note
-   Each "intercept" is the estimated threshold between the Nth category and the following category, on the latent standard Gaussian distribution.

    $$
    Pr(Y = k) = \Phi(\tau_k) - \Phi(\tau_{k-1})
    $$

-   `Conditionnoncaconical` indicates how the acceptability scores differ in the non-canonical condition relative to the canonical one on the latent Gaussian distribution.

-   Negative values of `Conditionnoncaconical` indicate lower acceptability.
:::

## Modelling acceptability: predicted acceptability

```{r}
#| label: acc-bm-1-cond

conditional_effects(acc_bm_1, categorical = TRUE)

```

## Category-specific effects

::: box-tip
-   Cumulative models assume a single latent variable.

-   Moreover, there is only one parameter for `Condition` which shifts the entire latent variable but does not allow for rating-category-specific differences.

-   We can use adjacent category models with category-specific effects.
:::

## Category-specific effects: fit adjacent category model

```{r}
#| label: acc-bm-2

acc_bm_2 <- brm(
  Response ~ cs(Condition) + (Condition | Participant) + (1 | Item),
  data = acceptability,
  family = acat("probit"),
  cores = 4,
  seed = 7823,
  file = "data/cache/acc_bm_2"
)
```

## Category-specific effects: model summary

```{r}
#| label: acc-bm-2-fixef

acc_bm_2_fixef <- fixef(acc_bm_2)
round(acc_bm_2_fixef, 2)
```

::: box-note
-   Each "intercept" is the threshold between the Nth level and the following level.

    $$
    P(Y = k \mid \eta) = \frac{\exp\left(\sum_{j=1}^{k-1} (\eta - \tau_j)\right)}{\sum_{r=1}^{K+1} \exp\left(\sum_{j=1}^{r-1} (\eta - \tau_j)\right)}
    $$

-   Now, `Condition` has one coefficient per rating-category.

-   For example, `Conditionnoncanonical[6]` with a 95% CrI \[-0.53, -0.13\] indicates that in the non-canonical condition, participants favour "7" over "6" *less* than in the canonical condition.
:::

## Category-specific effects: predicted probabilities

```{r}
#| label: acc-bm-2-cond

conditional_effects(acc_bm_2, categorical = TRUE)

```

## Language proficiency

```{r}
#| label: proficiency

proficiency <- read_csv("https://osf.io/download/4j3r2/") |> 
  mutate(
    Response = ordered(Response, levels = c("functional", "good", "very good", "nativelike"))
  )

proficiency
```

## Language proficiency: plot

```{r}
#| label: proficiency-plot

proficiency |>
  ggplot(aes(AoA)) +
  geom_histogram(binwidth = 2)
  
```

## Language proficiency: fit model

```{r}
#| label: pro-bm-1

pro_bm_1 <- brm(
  Response ~ AoA,
  data = proficiency,
  family = cumulative("probit"),
  cores = 4,
  seed = 3546,
  file = "data/cache/pro_bm_1"
)
```

## Language proficiency: model summary

```{r}
#| label: pro-bm-1-sum

summary(pro_bm_1)

```

## Language proficiency: expected predictions

```{r}
#| label: pro-bm-1-cond
conditional_effects(pro_bm_1, categorical = TRUE)
```

## A slightly more complex example: Emilian proficiency

```{r}
#| label: emilian
emilian <- readRDS("data/emilianto.rds") |> 
  filter(language == "Emilian") |> 
  mutate(
    age_c = age - mean(age),
    speak_2 = ordered(speak_2)
  )
emilian |> dplyr::select(age, age_c, education, gender, speak_2)
```

## Emilian speaking competence: prepare data

```{r}
#| label: emilian-lik
emilian_lik_gen <- emilian |>
  count(gender, speak_2) |>
  pivot_wider(names_from = "speak_2", values_from = n)
emilian_lik_ed <- emilian |>
  count(education, speak_2) |>
  pivot_wider(names_from = "speak_2", values_from = n)
```

## Emilian speaking competence by gender

```{r}
#| label: emilian-lik-gender
#| echo: false

HH::likert(
  gender ~ .,
  emilian_lik_gen,
  as.percent = TRUE,
  main = "Speaking proficiency of Emilian by gender"
)

```

## Emilian speaking competence by education

```{r}
#| label: emilian-lik-ed
#| echo: false

HH::likert(
  education ~ .,
  emilian_lik_ed,
  as.percent = TRUE,
  main = "Speaking proficiency of Emilian by education"
)
```

## Age of participants

```{r}
#| label: emilian-age

emilian |> 
  ggplot(aes(age)) +
  geom_histogram(binwidth = 5)

```

## Fit model

```{r}
#| label: emi_bm_1
emi_bm_1 <- brm(
  speak_2 ~ cs(education) + cs(gender) + age_c,
  family = acat("probit"),
  data = emilian,
  cores = 4,
  seed = 7263,
  file = "data/cache/emi_bm_1"
)
```

## Model summary

```{r}
#| label: emi-bm-1-sum
summary(emi_bm_1)
```

## Expected probabilities by gender

```{r}
conditional_effects(emi_bm_1, effects = "gender", categorical = TRUE)
```

## Expected probabilities by education

```{r}
conditional_effects(emi_bm_1, effects = "education", categorical = TRUE)
```

## Expected probabilities by age

```{r}
conditional_effects(emi_bm_1, effects = "age_c", categorical = TRUE)
```

## Resources

::: box-note
-   Bürkner, Paul-Christian, and Matti Vuorre. ‘Ordinal Regression Models in Psychology: A Tutorial’. Advances in Methods and Practices in Psychological Science 2, no. 1 (2019): 77–101. <https://doi.org/10.1177/2515245918823199.>

-   Verissimo, Joao. ‘Analysis of Rating Scales: A Pervasive Problem in Bilingualism Research and a Solution with Bayesian Ordinal Models’. Bilingualism: Language and Cognition 24, no. 5 (2021): 842–48. <https://doi.org/10.1017/S1366728921000316.>

-   [Notes on the Bayesian cumulative probit](https://solomonkurz.netlify.app/blog/2021-12-29-notes-on-the-bayesian-cumulative-probit/)

- [Adjacent category probit ordinal models expected predictions](https://discourse.mc-stan.org/t/adjacent-category-probit-ordinal-models-expected-predictions/38415?u=stefanoc88)
:::
